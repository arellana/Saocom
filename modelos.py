# -*- coding: utf-8 -*-
"""modelos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rHkt8rDWIqBj68V7mML4koojNgwf8GOe
    
##Modelo de Hallikainen
Usamos el modelo de hallikainen para transformar la humedad volumétrica (mv) del suelo medida con el hydra probe en constante dielectrica ϵ. La funcion tambien permite calcular la desviacion estandar de la medicion si se quiere.

Obs: nosotros tenemos portadoras en fc7=7.29GHz y fc8=8.74GHz pero ambas señales por el ancho que tienen caen bien en el valor 8 como para tomarlo de referencia para nuestro modelo.
"""

def mv_to_ep(mv,S,C,mv_std):
  
    ''' 
    Convertir mv a ep usando el modelo de Hallikainen (1985)

    Entradas:
    - S: fracción de arena
    - C: fracción de arcilla
    - mv: humedad del suelo
    - Propaga errores en caso de que ingrese mv_std

    Salidas:
    - ep = (a0 + a1*S + a2*C) + (b0 + b1*S + b2*C)*mv + (c0 + c1*S + c2*C)*mv**2
    - Delta ep = A + (B-1)*ep
    '''

    # Coeficientes calculados a 8GHz

    # Coeficientes para la parte real
    a0r, a1r, a2r = 2.862, -0.012, 0.001
    b0r, b1r, b2r = 3.803, 0.462, -0.341
    c0r, c1r, c2r = 119.006, -0.500, 0.633
    # Coeficientes para la parte imag
    a0i, a1i, a2i = 0.356, -0.003, -0.008
    b0i, b1i, b2i = 5.507, 0.044, -0.002
    c0i, c1i, c2i = 17.753, -0.313, 0.206
    

    ar = a0r+a1r*S+a2r*C
    br = b0r+b1r*S+b2r*C
    cr = c0r+c1r*S+c2r*C

    ai = a0i+a1i*S+a2i*C
    bi = b0i+b1i*S+b2i*C
    ci = c0i+c1i*S+c2i*C

    ep_real = ar + br*mv + cr*mv**2
    ep_imag = ai + bi*mv + ci*mv**2

    ep = ep_real+1j*ep_imag

    if(mv_std!=0):

        deps_realdmv = br + 2*cr*mv
        deps_imagdmv = bi + 2*ci*mv
        ep_real_std = abs(deps_realdmv)*mv_std
        ep_imag_std = abs(deps_imagdmv)*mv_std 
        ep_error = ep_real_std+1j*ep_imag_std

    else:
        ep_error = 0

    return {'ep': ep, 'ep_error': ep_error}



"""##Modelo de Peplinski para la constante dielectrica

"""

def ep2(mv,f,S,C,rb):
  ''' 
  Convertir mv a ep usando el modelo de Peplinski (1995)
  
  Entradas:
  - mv: humedad del suelo (volumétrica)
  - f : frecuencia portadora
  - S: fracción de arena (0<S<1)
  - C: fracción de arcilla (0<C<1)
  - rb: bulk density (g/cm3)

  Salidas:
  - ep: constante dieléctrica 
  '''
  import numpy as np
  alfa = 0.65 #empirica
  rs = 2.66 #densidad específica de las particulas de tierra solida
  sigma = 0.0467+0.2204*rb-0.4111*S+0.6614*C
  tau = 5.8e-11/(2*np.pi)
  ew_inf = 4.9


  #chequear
  ew_0 = 80.1 #+j*4.3
  #ver que en el paper dice que es ew_0=80.1
  #y que e_fw=79.8-1j*4.3
  #para la cte dieléctrica del agua pura libre a T ambiente

  
  beta1 = 1.2748-0.519*S-0.152*C
  beta2 = 1.33797-0.603*S-0.166*C

  ep_s = (1.01+0.44*rs)**2-0.062 #DE DONDE SALE????
  e_fw1 = ew_inf + (ew_0-ew_inf)/(1+(2*np.pi*tau*f)**2)
  e_fw2 = (2*np.pi*tau*f*(ew_0-ew_inf))/(1+(2*np.pi*tau*f)**2) + sigma*(rs-rb)/(2*np.pi*tau*rs*mv)

  e_real = (1+(rb/rs)*(ep_s**alfa)+mv**beta1*e_fw1**alfa-mv)**(1/alfa)
  e_imag = (mv**beta2*e_fw2**alfa)**(1/alfa)

  #ajuste por altas humedades
  e_real_ajustado= 1.15*e_real-0.68
  
  #ep = e_real +1j*e_imag
  ep = e_real_ajustado+1j*e_imag

  return ep
